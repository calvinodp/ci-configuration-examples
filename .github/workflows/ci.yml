# This is a basic workflow to help you get started with MATLAB Actions

name: MATLAB Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Sets up MATLAB on the GitHub Actions runner
      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v1

      # Runs a set of commands using the runners shell
      - name: Run all tests
        uses: matlab-actions/run-tests@v1
        with:
          source-folder: code
          select-by-folder : tests/A
          test-results-junit : test-results/results.xml
          
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always() # always run even if the previous step fails
        with:
          report_paths: test-results/results.xml
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: test_results
          path: test-results/results.xml
          

      #- name: Send mail
       # if: ${{ failure() }}
        #uses: dawidd6/action-send-mail@v3
       # with:
      #    server_address: smtp.gmail.com
       #   server_port: 465
       #   username: ${{ secrets.MAIL_USERNAME }}
       #   password: ${{ secrets.MAIL_PASSWORD }}
       #   subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
        #  to: ${{ secrets.CI_INTERNAL_EMAIL }}
       #   from: ${{ secrets.MAIL_USERNAME }}
       #   secure: true
       #   body: ${{ github.job }} job in workflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}

      # As an alternative to run-tests, you can use run-command to execute a MATLAB script, function, or statement.
      #- name: Run all tests
      #  uses: matlab-actions/run-command@v0
      #  with:
      #    command: addpath('code'); results = runtests('IncludeSubfolders', true); assertSuccess(results);
